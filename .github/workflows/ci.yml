name: Terraform CI Test

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '.github/workflows/**'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  terraform:
    name: Terraform Plan Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory:  # Adjust if your .tf files are elsewhere
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.6.0

    - name: Create terraform.tfvars (secured via GitHub secrets)
      run: |
        echo 'region                = "us-east-1"' > terraform.tfvars
        echo 'vpc_name              = "VPC_Main"' >> terraform.tfvars
        echo 'vpc_cidr              = "10.0.0.0/16"' >> terraform.tfvars
        echo 'public_subnet_name    = "Public"' >> terraform.tfvars
        echo 'public_subnet_cidr    = "10.0.1.0/24"' >> terraform.tfvars
        echo 'private_1_subnet_name = "Private_A"' >> terraform.tfvars
        echo 'private_1_subnet_cidr = "10.0.2.0/24"' >> terraform.tfvars
        echo 'private_2_subnet_name = "Private_B"' >> terraform.tfvars
        echo 'private_2_subnet_cidr = "10.0.3.0/24"' >> terraform.tfvars
        echo 'igw_name              = "IGW"' >> terraform.tfvars
        echo 'vpc_endpoint_name     = "VPC_EP"' >> terraform.tfvars
        echo 'user_ip               = "REMOVED_IP "' >> terraform.tfvars

        echo 'iam_role_name         = "EC2_S3"' >> terraform.tfvars
        echo 'iam_description       = "Gives private subnet EC2 instances read-only access to S3"' >> terraform.tfvars
        echo 'iam_assume_role_policy = <<POLICY_EOF' >> terraform.tfvars
        echo '{' >> terraform.tfvars
        echo '  "Version": "2012-10-17",' >> terraform.tfvars
        echo '  "Statement": [{' >> terraform.tfvars
        echo '    "Effect": "Allow",' >> terraform.tfvars
        echo '    "Principal": { "Service": "ec2.amazonaws.com" },' >> terraform.tfvars
        echo '    "Action": "sts:AssumeRole"' >> terraform.tfvars
        echo '  }]' >> terraform.tfvars
        echo '}' >> terraform.tfvars
        echo 'POLICY_EOF' >> terraform.tfvars

        echo 'iam_policy_arns = ["arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"]' >> terraform.tfvars

        echo 'public_instance_name    = "Public"' >> terraform.tfvars
        echo 'private_1_instance_name = "Private_A"' >> terraform.tfvars
        echo 'private_2_instance_name = "Private_B"' >> terraform.tfvars

        echo 'ec2_ami_id        = "REMOVED_AMI_ID"' >> terraform.tfvars
        echo 'ec2_instance_type = "t2.micro"' >> terraform.tfvars
        echo 'ec2_key_pair      = REMOVED_KEY_PAIR' >> terraform.tfvars

    - name: Terraform Init
      run: terraform init

    - name: Terraform Format Check
      run: terraform fmt -check

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      run: terraform plan -var-file="terraform.tfvars"
      timeout-minutes: 5